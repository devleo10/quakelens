import { useState, useEffect } from "react"
import { Card, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { Loader2, MapPin, Activity, Layers } from "lucide-react"
import EarthquakeMap from "@/components/earthquake-map"
import SidebarStats from "@/components/SidebarStats"
import SidebarFilter from "@/components/SidebarFilter"
import SidebarScale from "@/components/SidebarScale"
import MapHeader from "@/components/MapHeader"

interface Earthquake {
  id: string
  properties: {
    mag: number
    place: string
    time: number
    updated: number
    tz: number
    url: string
    detail: string
    felt: number | null
    cdi: number | null
    mmi: number | null
    alert: string | null
    status: string
    tsunami: number
    sig: number
    net: string
    code: string
    ids: string
    sources: string
    types: string
    nst: number | null
    dmin: number | null
    rms: number
    gap: number | null
    magType: string
    type: string
    title: string
  }
  geometry: {
    type: string
    coordinates: [number, number, number] // [longitude, latitude, depth]
  }
}

interface EarthquakeData {
              <div className="lg:col-span-1 space-y-2 mb-4 lg:mb-0">
                <SidebarStats stats={stats} />
                <SidebarFilter
                  selectedMagnitude={selectedMagnitude}
                  setSelectedMagnitude={setSelectedMagnitude}
                  fetchEarthquakeData={fetchEarthquakeData}
                  loading={loading}
                />
                <SidebarScale />
              </div>
            {stats && (
              <Card className="bg-white/90 dark:bg-slate-900/90 border-0 shadow-lg px-3 py-3 min-h-[108px] flex flex-col justify-center">
                <CardHeader className="pb-1.5 px-1.5">
                  <CardTitle className="flex items-center gap-2.5 text-sm font-semibold text-slate-700 dark:text-slate-300">
                    <Activity className="h-4 w-4 text-blue-500" />
                    Live Statistics
                  </CardTitle>
                </CardHeader>
                <CardContent className="flex flex-row lg:flex-col justify-between items-center gap-3.5 px-1.5 py-1.5 flex-1">
                  <div className="flex flex-col items-center flex-1 min-w-0 gap-0.5">
                    <span className="text-xl font-bold text-blue-600 dark:text-blue-400 leading-tight">{stats.total}</span>
                    <span className="text-[11px] text-slate-500 dark:text-slate-400">Events</span>
                  </div>
                  <div className="flex flex-col items-center flex-1 min-w-0 border-x border-slate-200 dark:border-slate-700 px-2.5 gap-1">
                    <span className="text-xl font-bold text-orange-600 dark:text-orange-400 leading-tight">{stats.maxMagnitude.toFixed(1)}</span>
                    <span className="text-[11px] text-slate-500 dark:text-slate-400 mt-0.5">Max Mag</span>
                  </div>
                  <div className="flex flex-col items-center flex-1 min-w-0 gap-1">
                    <span className="text-xl font-bold text-green-600 dark:text-green-400 leading-tight">{stats.avgMagnitude}</span>
                    <span className="text-[11px] text-slate-500 dark:text-slate-400 mt-0.5">Avg Mag</span>
                  </div>
                </CardContent>
              </Card>
            )}

            {/* Magnitude Filter (moved from bottom to sidebar) */}
            <Card className="bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm border-0 shadow-lg">
              <CardHeader className="pb-1">
                <CardTitle className="flex items-center gap-2 text-xs">
                  <Layers className="h-3 w-3 text-blue-500" />
                  <span>Filter</span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-1 p-1">
                <div className="text-center">
                  <div className="text-base font-bold text-blue-600 dark:text-blue-400">
                    {selectedMagnitude.toFixed(1)}
                  </div>
                  <div className="text-[10px] text-slate-600 dark:text-slate-400">Min Mag</div>
                </div>
                <div className="space-y-0.5">
                  <input
                    type="range"
                    min="0"
                    max="8"
                    step="0.5"
                    value={selectedMagnitude}
                    onChange={(e) => setSelectedMagnitude(Number(e.target.value))}
                    className="w-full h-2 rounded-lg appearance-none cursor-pointer bg-gradient-to-r from-green-400 via-yellow-400 via-orange-400 to-red-500 slider"
                  />
                  <div className="flex justify-between text-xs text-slate-500 dark:text-slate-400">
                    <span className="text-green-700 dark:text-green-300">0</span>
                    <span className="text-yellow-700 dark:text-yellow-300">4</span>
                    <span className="text-red-700 dark:text-red-300">8+</span>
                  </div>
                </div>

                <Button 
                  onClick={fetchEarthquakeData} 
                  className="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 border-0 shadow-md text-xs py-0.5 min-h-0 h-7"
                  disabled={loading}
                >
                  {loading ? (
                    <>
                      <Loader2 className="h-3 w-3 animate-spin mr-1" />
                      Refresh
                    </>
                  ) : (
                    <>
                      <Activity className="h-3 w-3 mr-1" />
                      Refresh
                    </>
                  )}
                </Button>
              </CardContent>
            </Card>

            {/* Magnitude Scale Legend - Ultra Compact (now in sidebar) */}
            <Card className="bg-white/80 dark:bg-slate-900/80 backdrop-blur-sm border-0 shadow-lg">
              <CardHeader className="pb-0.5">
                <CardTitle className="flex items-center gap-1 text-xs">
                  <MapPin className="h-3 w-3 text-purple-500" />
                  <span>Scale</span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-0.5 p-1">
                {[
                  { range: "7+", color: "#dc2626", label: "Major" },
                  { range: "6-7", color: "#ea580c", label: "Strong" },
                  { range: "5-6", color: "#d97706", label: "Moderate" },
                  { range: "4-5", color: "#ca8a04", label: "Light" },
                  { range: "3-4", color: "#65a30d", label: "Minor" },
                  { range: "2-3", color: "#16a34a", label: "Micro" },
                  { range: "<2", color: "#059669", label: "Micro" },
                ].map((item) => (
                  <div
                    key={item.range}
                    className="flex items-center gap-1 py-0.5 px-1 rounded"
                  >
                    <div
                      className="w-2 h-2 rounded-full flex-shrink-0"
                      style={{ backgroundColor: item.color }}
                    />
                    <div className="flex-1 flex items-center justify-between min-w-0">
                      <span className="text-[10px] font-medium text-slate-700 dark:text-slate-300">{item.range}</span>
                      <span className="text-[10px] text-slate-500 dark:text-slate-400">{item.label}</span>
                    </div>
                  </div>
                ))}
              </CardContent>
            </Card>

          </div>

          {/* Main Map Area */}
          <div className="lg:col-span-3">
            <Card className="bg-white/90 dark:bg-slate-900/90 backdrop-blur-sm border-0 shadow-xl min-h-[200px] overflow-hidden">
              <CardHeader className="bg-gradient-to-r from-slate-50 to-blue-50 dark:from-slate-800 dark:to-slate-700 min-h-[120px]">
                <div className="flex items-center justify-between w-full">
                  <div className="flex items-center gap-2">
                    <div className="p-1 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg shadow-lg">
                      <Activity className="h-4 w-4 text-white" />
                    </div>
                    <div>
                      <span className="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent text-lg font-semibold"> Quakelens - Earthquake Visualizer</span>
                      <span className="text-slate-600 dark:text-slate-400 ml-2">- Global Activity</span>
                    </div>
                  </div>
                  <div className="hidden sm:block">
                    <Button variant="outline" size="sm" onClick={fetchEarthquakeData} disabled={loading}>
                      {loading ? <Loader2 className="h-3 w-3 animate-spin" /> : <Activity className="h-3 w-3" />}
                    </Button>
                  </div>
                </div>
                <div className="w-full">
                  {earthquakeData ? (
                    <div className="flex flex-wrap gap-4 text-sm">
                      <span className="flex items-center gap-1">
                        <span className="font-medium text-slate-900 dark:text-slate-100">Updated:</span>
                        <span className="text-slate-800 dark:text-slate-200">{formatTime(earthquakeData.metadata.generated)}</span>
                      </span>
                      <span className="flex items-center gap-1">
                        <span className="font-medium text-slate-900 dark:text-slate-100">Showing:</span>
                        <span className="text-blue-700 dark:text-blue-300 font-semibold">{filteredEarthquakes.length}</span>
                        <span className="text-slate-800 dark:text-slate-200">of {earthquakeData.features.length}</span>
                      </span>
                      <span className="flex items-center gap-1">
                        <span className="font-medium text-slate-900 dark:text-slate-100">Source:</span>
                        <span className="text-emerald-700 dark:text-emerald-300 font-medium">USGS</span>
                      </span>
                      <span className="flex items-center gap-1">
                        <span className="font-medium text-slate-900 dark:text-slate-100">Period:</span>
                        <span className="text-amber-700 dark:text-amber-300 font-medium">Last 24h</span>
                      </span>
                    </div>
                  ) : (
                    <div className="text-sm text-slate-700 dark:text-slate-300">
                      {loading ? "Loading earthquake data..." : "Real-time earthquake monitoring from USGS • Global coverage • Updated continuously"}
                    </div>
                  )}
                </div>
              </CardHeader>
              <CardContent className="p-0">
                <div className="h-[220px] sm:h-[300px] md:h-[350px] lg:h-[400px] w-full relative min-h-[120px]">
                  {earthquakeData && (
                    <EarthquakeMap
                      earthquakes={filteredEarthquakes}
                      getMagnitudeColor={getMagnitudeColor}
                      getMagnitudeSize={getMagnitudeSize}
                      formatTime={formatTime}
                    />
                  )}
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  )
}
